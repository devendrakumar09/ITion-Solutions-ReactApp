{"ast":null,"code":"var _jsxFileName = \"/home/devendra/Desktop/intrn-projectrs/ITion Solutions/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Movies from './local-json/movies-filter-react.json';\nimport MovieCard from './components/MovieCard';\nimport NavbarUI from './components/NavbarUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('./local-json/movies-filter-react.json'); // Replace with your API endpoint\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data = await response.json();\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div class=\"bg-gradient-to-bl from-blue-50 to-violet-50 flex items-center justify-center \">\n    //   <div class=\"container  mx-auto p-4\">\n    //     <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4 gap-4\">\n    //       <NavbarUI />\n    //       {/* {loading ? (\n    //     <p>Loading...</p>\n    //   ) : error ? (\n    //     <p>Error: {error}</p>\n    //   ) : (\n    //     <ul>\n    //       {data.map((item) => (\n    //         <li key={item.id}>hi</li>\n    //         // <UserUI data={item} key={item.id} />\n    //       ))}\n    //     </ul>\n    //   )} */}\n    //       {Movies.map((item) => (\n    //         // <li key={item.id}>{item.movietitle}</li>\n    //         // <UserUI data={item} key={item.id} />\n    //         <MovieCard data={item} key={item.id} />\n    //       ))}\n    //     </div>\n    //   </div>\n    // </div>\n    // <div class=\"bg-[#ffd148] flex items-center justify-center min-h-screen relative z-10\">\n    //   <div\n    //     class=\"w-full max-w-[1190px] px-6 sm:px-8 md:px-16 py-10 md:py-20 rounded-xl bg-[#ffffff]/60 min-h-[300px] m-2 shadow-[0px_14px_28px_-5px_rgba(0,0,0,0.21)]\">\n    //     <h1 class=\"font-semibold text-2xl mb-2 tracking-wider drop-shadow-[3px_3px_5px_rgba(91,91,91,0.58)]\">Website -\n    //       MOVIES</h1>\n    //     <small class=\"font-[500]\">In the event that we do not have a full 30-days, we extrapolate based on data we have.</small>\n    //     {Movies.map((item) => (\n    //       // <li key={item.id}>{item.movietitle}</li>\n    //       // <UserUI data={item} key={item.id} />\n    //       <MovieCard data={item} key={item.id} />\n    //     ))}\n    //   </div>\n    // </div>\n    // <div class=\"mx-auto grid max-w-4xl grid-cols-12 gap-4 bg-zinc-50 p-1\">\n    //   <div class=\"header col-span-12 rounded-lg border border-gray-300 bg-gray-600 py-8\">\n    //     {/* <!-- Header content --> */}\n    //   </div>\n    //   <div class=\"col-span-12 rounded-lg border border-gray-500 bg-gray-200 p-32 sm:col-span-12\">\n    //     {/* <!-- Main Content --> */}\n    //     {Movies.map((item) => (\n    //     //  <li key={item.id}>{item.movietitle}</li>\n    //     //  <UserUI data={item} key={item.id} />\n    //       <MovieCard data={item} key={item.id} />\n    //     ))}\n    //   </div>\n    // </div>\n    _jsxDEV(\"main\", {\n      className: \"flex w-full h-full shadow-lg bg-gray-100 min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto grid max-w-4xl grid-cols-12 gap-4 p-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-5\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold text-gray-900\",\n                children: \"Suggestion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid sm:grid-cols-2 sm:gap-x-4 lg:grid-cols-4\",\n              children: \"asd[aspd]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Movies","MovieCard","NavbarUI","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/devendra/Desktop/intrn-projectrs/ITion Solutions/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Movies from './local-json/movies-filter-react.json'\nimport MovieCard from './components/MovieCard';\nimport NavbarUI from './components/NavbarUI';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('./local-json/movies-filter-react.json'); // Replace with your API endpoint\n      if (!response.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data = await response.json();\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    // <div class=\"bg-gradient-to-bl from-blue-50 to-violet-50 flex items-center justify-center \">\n    //   <div class=\"container  mx-auto p-4\">\n    //     <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4 gap-4\">\n    //       <NavbarUI />\n    //       {/* {loading ? (\n    //     <p>Loading...</p>\n    //   ) : error ? (\n    //     <p>Error: {error}</p>\n    //   ) : (\n    //     <ul>\n    //       {data.map((item) => (\n    //         <li key={item.id}>hi</li>\n    //         // <UserUI data={item} key={item.id} />\n    //       ))}\n    //     </ul>\n    //   )} */}\n\n    //       {Movies.map((item) => (\n    //         // <li key={item.id}>{item.movietitle}</li>\n    //         // <UserUI data={item} key={item.id} />\n    //         <MovieCard data={item} key={item.id} />\n    //       ))}\n    //     </div>\n    //   </div>\n    // </div>\n\n\n    // <div class=\"bg-[#ffd148] flex items-center justify-center min-h-screen relative z-10\">\n    //   <div\n    //     class=\"w-full max-w-[1190px] px-6 sm:px-8 md:px-16 py-10 md:py-20 rounded-xl bg-[#ffffff]/60 min-h-[300px] m-2 shadow-[0px_14px_28px_-5px_rgba(0,0,0,0.21)]\">\n    //     <h1 class=\"font-semibold text-2xl mb-2 tracking-wider drop-shadow-[3px_3px_5px_rgba(91,91,91,0.58)]\">Website -\n    //       MOVIES</h1>\n    //     <small class=\"font-[500]\">In the event that we do not have a full 30-days, we extrapolate based on data we have.</small>\n    //     {Movies.map((item) => (\n    //       // <li key={item.id}>{item.movietitle}</li>\n    //       // <UserUI data={item} key={item.id} />\n    //       <MovieCard data={item} key={item.id} />\n    //     ))}\n\n\n    //   </div>\n    // </div>\n\n\n    // <div class=\"mx-auto grid max-w-4xl grid-cols-12 gap-4 bg-zinc-50 p-1\">\n    //   <div class=\"header col-span-12 rounded-lg border border-gray-300 bg-gray-600 py-8\">\n    //     {/* <!-- Header content --> */}\n    //   </div>\n    //   <div class=\"col-span-12 rounded-lg border border-gray-500 bg-gray-200 p-32 sm:col-span-12\">\n    //     {/* <!-- Main Content --> */}\n    //     {Movies.map((item) => (\n    //     //  <li key={item.id}>{item.movietitle}</li>\n    //     //  <UserUI data={item} key={item.id} />\n    //       <MovieCard data={item} key={item.id} />\n    //     ))}\n    //   </div>\n    // </div>\n\n    <main className=\"flex w-full h-full shadow-lg bg-gray-100 min-h-screen\">\n      <div className=\"mx-auto grid max-w-4xl grid-cols-12 gap-4 p-1\">\n\n\n        <div className=\"col-span-12\">\n          <div className=\"px-4\">\n            <div className=\"my-5\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Suggestion</h2>\n            </div>\n            <div className=\"grid sm:grid-cols-2 sm:gap-x-4 lg:grid-cols-4\">\n              asd[aspd]\n            </div>\n          </div>\n        </div>\n\n        {/* <div className=\"col-span-12 sm:col-span-6\">\n          <div className=\" \">\n            <PostUI2 />\n          </div>\n        </div>\n        <div className=\"col-span-12 sm:col-span-6\">\n          <div className=\" \">\n            <PostUI2 />\n          </div>\n        </div> */}\n      </div>\n\n    </main>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}